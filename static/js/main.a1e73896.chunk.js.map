{"version":3,"sources":["redux/reducer.js","redux/store.js","services/aviasalesApi.js","redux/actions.js","components/Flight.jsx","components/Ticket.jsx","components/Empty.jsx","components/Error.jsx","components/TicketList.jsx","components/Filter.jsx","components/SortButtons.jsx","components/Progress.jsx","components/App.jsx","index.jsx"],"names":["reducerFilters","filter","checkedList","checkAll","action","type","list","checked","reducerSort","sort","reducerData","data","tickets","reducerLoading","loading","isLoading","reducerProgress","progress","reducerError","error","reducer","state","store","createStore","applyMiddleware","thunk","getSearchId","a","fetch","response","json","getData","searchId","ok","jsonResponse","setLoading","setProgress","setError","setData","dispatch","responseWithId","maxCalls","i","stop","sortCheapest","sortFastest","setCheckedList","setCheckedAll","Flight","length","direction","origin","destination","date","stops","duration","durationTime","format","asString","Date","dateStart","formatToTimeZone","timeZone","dateEnd","addSubtractDate","add","stopsList","join","stopsCountLabel","className","Ticket","item","price","carrier","segments","to","back","priceLabel","toString","replace","src","alt","Empty","Error","TicketList","index","map","key","uniqid","connect","defaultProps","CheckboxGroup","Checkbox","Group","stateFilter","bindActionCreators","actions","filters","allFilters","defaultFilters","useEffect","onChange","event","isChecked","target","options","value","checkList","cheapestClassNames","cn","sort__btn","fastestClassNames","onClick","style","position","top","left","maxWidth","lineHeight","zIndex","percent","showInfo","strokeColor","oneOfTheFilters","checkboxNumber","includes","ticket","withFilters","filteredData","useMemo","reduce","acc","filterName","sortedData","prev","next","skeleton","Progress","spinning","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1e73896.chunk.js","sourcesContent":["const reducerFilters = (\r\n  filter = {\r\n    checkedList: [],\r\n    checkAll: true,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'SET__CHECKED__LIST':\r\n      return { ...filter, checkedList: action.list };\r\n    case 'SET__CHECKED__ALL':\r\n      return { ...filter, checkAll: action.checked };\r\n    default:\r\n      return filter;\r\n  }\r\n};\r\n\r\nconst reducerSort = (sort = 'cheapest', action) => {\r\n  switch (action.type) {\r\n    case 'SORT__CHEAPEST':\r\n      return 'cheapest';\r\n\r\n    case 'SORT__FASTEST':\r\n      return 'fastest';\r\n\r\n    default:\r\n      return sort;\r\n  }\r\n};\r\n\r\nconst reducerData = (data = [], action) => {\r\n  switch (action.type) {\r\n    case 'SET__DATA':\r\n      return [...data, ...action.tickets];\r\n\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n\r\nconst reducerLoading = (loading = true, action) => {\r\n  switch (action.type) {\r\n    case 'SET__LOADING':\r\n      return action.isLoading;\r\n\r\n    default:\r\n      return loading;\r\n  }\r\n};\r\nconst reducerProgress = (progress = 0, action) => {\r\n  switch (action.type) {\r\n    case 'SET__PROGRESS':\r\n      return action.progress;\r\n\r\n    default:\r\n      return progress;\r\n  }\r\n};\r\nconst reducerError = (error = null, action) => {\r\n  switch (action.type) {\r\n    case 'SET__ERROR':\r\n      return action.error;\r\n\r\n    default:\r\n      return error;\r\n  }\r\n};\r\n\r\nconst reducer = (state = {}, action) => {\r\n  return {\r\n    isLoading: reducerLoading(state.isLoading, action),\r\n    progress: reducerProgress(state.progress, action),\r\n    error: reducerError(state.error, action),\r\n    data: reducerData(state.data, action),\r\n    sort: reducerSort(state.sort, action),\r\n    filter: reducerFilters(state.filter, action),\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","export const getSearchId = async () => {\r\n  const response = await fetch('https://front-test.beta.aviasales.ru/search');\r\n  return response.json();\r\n};\r\n\r\nexport const getData = async (searchId) => {\r\n  const response = await fetch(`https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`);\r\n  if (!response.ok) {\r\n    return [];\r\n  }\r\n  const jsonResponse = await response.json();\r\n  return jsonResponse;\r\n};\r\n","import { getSearchId, getData } from '../services/aviasalesApi';\r\n\r\nconst SET__LOADING = 'SET__LOADING';\r\nconst SET__PROGRESS = 'SET__PROGRESS';\r\nconst SET__ERROR = 'SET__ERROR';\r\nconst SET__DATA = 'SET__DATA';\r\nconst SORT__CHEAPEST = 'SORT__CHEAPEST';\r\nconst SORT__FASTEST = 'SORT__FASTEST';\r\nconst SET__CHECKED__LIST = 'SET__CHECKED__LIST';\r\nconst SET__CHECKED__ALL = 'SET__CHECKED__ALL';\r\n\r\nexport const setLoading = (isLoading) => ({ type: SET__LOADING, isLoading });\r\nexport const setProgress = (progress) => ({ type: SET__PROGRESS, progress });\r\nexport const setError = (error) => ({ type: SET__ERROR, error });\r\n\r\nexport const setData = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  let responseWithId;\r\n  try {\r\n    responseWithId = await getSearchId();\r\n  } catch (err) {\r\n    dispatch(setError(err));\r\n    dispatch(setProgress(100));\r\n    dispatch(setLoading(false));\r\n    return;\r\n  }\r\n  const maxCalls = 30;\r\n  for (let i = 1; i <= maxCalls; i++) {\r\n    try {\r\n      // eslint-disable-next-line\r\n      const { tickets, stop } = await getData(responseWithId.searchId);\r\n      if (stop) {\r\n        dispatch(setProgress(100));\r\n        break;\r\n      }\r\n      dispatch({ type: SET__DATA, tickets: tickets || [] });\r\n      dispatch(setProgress((i * 100) / maxCalls));\r\n    } catch (err) {\r\n      dispatch(setError(err));\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n};\r\n\r\nexport const sortCheapest = () => ({ type: SORT__CHEAPEST });\r\n\r\nexport const sortFastest = () => ({ type: SORT__FASTEST });\r\n\r\nexport const setCheckedList = (list) => ({ type: SET__CHECKED__LIST, list });\r\n\r\nexport const setCheckedAll = (checked) => ({ type: SET__CHECKED__ALL, checked });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport format from 'date-format';\r\nimport addSubtractDate from 'add-subtract-date';\r\nimport { formatToTimeZone } from 'date-fns-timezone';\r\n\r\nconst getStopsCountLabel = (length) => {\r\n  if (length === 0) {\r\n    return 'без пересадок';\r\n  }\r\n  if (length === 1) {\r\n    return '1 пересадка';\r\n  }\r\n  return `${length} пересадки`;\r\n};\r\n\r\nexport default function Flight({ direction }) {\r\n  const { origin, destination, date, stops, duration } = direction;\r\n\r\n  const durationTime = format.asString('hhч mmм', new Date(0, 0, 1, 0, duration));\r\n  const dateStart = formatToTimeZone(new Date(date), 'hh:mm', { timeZone: 'Europe/Moscow' });\r\n  const dateEnd = formatToTimeZone(addSubtractDate.add(new Date(date), duration, 'minutes'), 'hh:mm', {\r\n    timeZone: 'Europe/Moscow',\r\n  });\r\n\r\n  const stopsList = stops.join(', ');\r\n  const stopsCountLabel = getStopsCountLabel(stops.length);\r\n\r\n  return (\r\n    <div className=\"ticket__flight\">\r\n      <div className=\"ticket__info\">\r\n        <p className=\"font--grey-title\">{`${origin} - ${destination}`}</p>\r\n        <p>{`${dateStart} – ${dateEnd}`}</p>\r\n      </div>\r\n      <div className=\"ticket__info\">\r\n        <p className=\"font--grey-title\">В пути</p>\r\n        <p>{durationTime}</p>\r\n      </div>\r\n      <div className=\"ticket__info\">\r\n        <p className=\"font--grey-title\">{stopsCountLabel}</p>\r\n        <p>{stopsList}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nFlight.propTypes = {\r\n  direction: PropTypes.shape({\r\n    origin: PropTypes.string,\r\n    destination: PropTypes.string,\r\n    date: PropTypes.string,\r\n    stops: PropTypes.arrayOf(PropTypes.string),\r\n    duration: PropTypes.number,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Flight from './Flight';\r\n\r\nconst getPriceLabel = (cost) => {\r\n  return `${cost.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')} Р`;\r\n};\r\n\r\nexport default function Ticket({ item }) {\r\n  const { price, carrier, segments } = item;\r\n  const [to, back] = segments;\r\n\r\n  const priceLabel = getPriceLabel(price);\r\n  const baseUrlImage = '//pics.avs.io/99/36/';\r\n\r\n  return (\r\n    <div className=\"ticket\">\r\n      <div className=\"ticket__header\">\r\n        <h4 className=\"ticket__title font--blue\">{priceLabel}</h4>\r\n        <div className=\"ticket__logo\">\r\n          <img src={`${baseUrlImage}${carrier}.png`} alt={`logo ${carrier}`} className=\"src\" />\r\n        </div>\r\n      </div>\r\n      <Flight direction={to} />\r\n      <Flight direction={back} />\r\n    </div>\r\n  );\r\n}\r\n\r\nTicket.propTypes = {\r\n  item: PropTypes.shape({\r\n    price: PropTypes.number.isRequired,\r\n    carrier: PropTypes.string.isRequired,\r\n    segments: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Empty() {\r\n  return <div className=\"alert alert--empty\">Рейсов, подходящих под заданные фильтры, не найдено</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Error() {\r\n  return <div className=\"alert alert--error\">Oshibka</div>;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport uniqid from 'uniqid';\r\nimport Ticket from './Ticket';\r\nimport Empty from './Empty';\r\nimport Error from './Error';\r\n\r\nconst TicketList = ({ error, data }) => {\r\n  if (error) {\r\n    return <Error />;\r\n  }\r\n  if (data.length === 0) {\r\n    return <Empty />;\r\n  }\r\n  return data\r\n    .filter((item, index) => index < 5)\r\n    .map((item) => {\r\n      return (\r\n        <li key={uniqid()}>\r\n          <Ticket item={item} />\r\n        </li>\r\n      );\r\n    });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TicketList);\r\n\r\nTicketList.defaultProps = {\r\n  error: null,\r\n};\r\n\r\nTicketList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  error: PropTypes.instanceOf(Error),\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Checkbox } from 'antd';\r\nimport * as actions from '../redux/actions';\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nfunction Filter({ filters, stateFilter, setCheckedList, setCheckedAll }) {\r\n  const { allFilters, defaultFilters } = filters;\r\n  const { checkedList, checkAll } = stateFilter;\r\n\r\n  useEffect(() => {\r\n    setCheckedList(defaultFilters);\r\n    setCheckedAll(defaultFilters.length === allFilters.length);\r\n  }, [setCheckedList, setCheckedAll, allFilters, defaultFilters]);\r\n\r\n  const onChange = (checkList) => {\r\n    setCheckedAll(checkList.length === allFilters.length);\r\n    setCheckedList(checkList);\r\n  };\r\n\r\n  const onCheckAllChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    setCheckedAll(isChecked);\r\n    setCheckedList(isChecked ? allFilters : []);\r\n  };\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <h4 className=\"sidebar__header\">Количество пересадок</h4>\r\n      <Checkbox className=\"sidebar__Checkbox-all\" onChange={onCheckAllChange} checked={checkAll}>\r\n        Все\r\n      </Checkbox>\r\n      <CheckboxGroup className=\"sidebar__CheckboxGroup\" options={allFilters} value={checkedList} onChange={onChange} />\r\n    </aside>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateFilter: state.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { setCheckedList, setCheckedAll } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    setCheckedList,\r\n    setCheckedAll,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filters: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\r\n  stateFilter: PropTypes.shape({\r\n    checkedList: PropTypes.arrayOf(PropTypes.string),\r\n    checkAll: PropTypes.bool,\r\n  }).isRequired,\r\n  setCheckedList: PropTypes.func.isRequired,\r\n  setCheckedAll: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\n\r\nfunction SortButtons({ sort, sortCheapest, sortFastest }) {\r\n  const cheapestClassNames = cn({\r\n    sort__btn: true,\r\n    'sort__btn--cheapest': true,\r\n    'sort__btn--active': sort === 'cheapest',\r\n  });\r\n\r\n  const fastestClassNames = cn({\r\n    sort__btn: true,\r\n    'sort__btn--fastest': true,\r\n    'sort__btn--active': sort === 'fastest',\r\n  });\r\n\r\n  return (\r\n    <div className=\"sort\">\r\n      <button type=\"button\" className={cheapestClassNames} onClick={sortCheapest}>\r\n        Самый дешевый\r\n      </button>\r\n      <button type=\"button\" className={fastestClassNames} onClick={sortFastest}>\r\n        Самый быстрый\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sort: state.sort,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { sortCheapest, sortFastest } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    sortCheapest,\r\n    sortFastest,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortButtons);\r\n\r\nSortButtons.propTypes = {\r\n  sort: PropTypes.string.isRequired,\r\n  sortCheapest: PropTypes.func.isRequired,\r\n  sortFastest: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport 'antd/es/progress/style/index.css';\r\nimport { Progress } from 'antd';\r\n\r\nfunction MyProgress({ progress }) {\r\n  const style = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    maxWidth: '100wv',\r\n    lineHeight: 0,\r\n    zIndex: 1000,\r\n  };\r\n  return (\r\n    <Progress\r\n      style={style}\r\n      percent={progress}\r\n      showInfo={false}\r\n      strokeColor={{\r\n        '0%': '#108ee9',\r\n        '100%': '#87d068',\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    progress: state.progress,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyProgress);\r\n\r\nMyProgress.propTypes = {\r\n  progress: PropTypes.number.isRequired,\r\n};\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.scss';\r\nimport 'antd/es/spin/style/index.css';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Spin } from 'antd';\r\nimport * as actions from '../redux/actions';\r\nimport TicketList from './TicketList';\r\nimport Filter from './Filter';\r\nimport SortButtons from './SortButtons';\r\nimport Progress from './Progress';\r\n\r\nconst allFilters = ['Без пересадок', '1 пересадка', '2 пересадки', '3 пересадки'];\r\nconst defaultFilters = ['Без пересадок', '1 пересадка', '2 пересадки', '3 пересадки'];\r\n\r\nconst withFilters = (data, checkedList, filters) => (checkboxNumber) => {\r\n  return !checkedList.includes(filters[checkboxNumber])\r\n    ? []\r\n    : data.filter((ticket) => {\r\n        const stopsCount = ticket.segments[0].stops.length;\r\n        return stopsCount === checkboxNumber;\r\n      });\r\n};\r\n\r\nfunction App({ data, isLoading, filter, setData, sort }) {\r\n  const { checkedList } = filter;\r\n\r\n  const oneOfTheFilters = withFilters(data, checkedList, allFilters);\r\n\r\n  const filteredData = useMemo(() => {\r\n    return allFilters.reduce((acc, filterName, checkboxNumber) => [...acc, ...oneOfTheFilters(checkboxNumber)], []);\r\n  }, [oneOfTheFilters]);\r\n\r\n  const sortedData = useMemo(\r\n    () =>\r\n      sort === 'fastest'\r\n        ? filteredData.sort((prev, next) => (prev.segments[0].duration > next.segments[0].duration ? 1 : -1))\r\n        : filteredData.sort((prev, next) => (prev.price > next.price ? 1 : -1)),\r\n    [filteredData, sort]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setData();\r\n  }, [setData]);\r\n\r\n  const skeleton = <div className=\"skeleton\" />;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Progress />\r\n      <header className=\"header\">\r\n        <div className=\"logo\" />\r\n      </header>\r\n      <main className=\"content\">\r\n        <Filter filters={{ allFilters, defaultFilters }} />\r\n        <section className=\"ticket-list-wrapper\">\r\n          <SortButtons />\r\n          <Spin spinning={isLoading} size=\"large\">\r\n            <ul className=\"ticket-list\">{isLoading ? skeleton : <TicketList data={sortedData} />}</ul>\r\n          </Spin>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchId: state.searchId,\r\n    isLoading: state.isLoading,\r\n    data: state.data,\r\n    filter: state.filter,\r\n    sort: state.sort,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { setData } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    setData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nApp.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  filter: PropTypes.shape({\r\n    checkedList: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n  setData: PropTypes.func.isRequired,\r\n  sort: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}